name: Test and Publish

on: [push, pull_request, release]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']

    steps:
    - uses: hmarr/debug-action@v2
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade toml pip
        python3 -m pip install .[test]
        wget https://apertium.projectjj.com/apt/install-nightly.sh -O - | sudo bash
        sudo apt-get -f install cg3 hfst python3-hfst
    - name: Lint with flake8
      run: |
        python3 -m pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=16 --max-line-length=127 --statistics
    - name: Test with pytest
      run: pytest -vv --cov --cov-append --cov-report xml --doctest-modules test/
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  dist:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Build wheel and SDist
      run: pipx run build

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*


  publish:
    needs: [dist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
